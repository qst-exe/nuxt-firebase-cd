# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
#      - name: install jq
#        run: |
#          sudo apt-get update
#          sudo apt-get install jq
#      - name: check package version
#        run: |
#          cat package.json | jq -r '.version' | awk 'BEGIN{FS=OFS="."} {$3+=1} 1' | (read v ;echo -e VERSION="$v";) >> $GITHUB_ENV
#      - run: echo $GITHUB_ENV['VERSION']
      - name: Set Git Config
        run: |
          git config --global user.name "Nuxt Firebase CD"
          git config --global user.email git@qst.com
#      - name: Major release
#        id: major
#        if: contains(toJSON(github.event.commits.*.message), 'bump up version major')
#        run: echo 'bump up version major'
#      - name: Minor release
#        id: minor
#        # メジャーバージョンアップをしていないときマイナーバージョンアップを行なうか
#        if: steps.major.conclusion == 'skipped'  && contains(toJSON(github.event.commits.*.message), 'bump up version minor')
#        run: echo 'bump up version minor'
      - name: Patch release
        # コミットメッセージに特に指定がない場合はマイナーバージョンを更新する
        if: "!(steps.major.conclusion == 'success' || steps.minor.conclusion == 'success' || contains(toJSON(github.event.commits.*.message), 'bump up version patch'))"
        run: |
          npm version patch -m 'hoge'
#          cat package.json | jq -r '.version' | awk 'BEGIN{FS=OFS="."} {$3+=1} 1' | (read v ;echo -e VERSION="$v";) >> $GITHUB_ENV
#      - run: echo $GITHUB_ENV['VERSION']
      - name: Push origin
        run: git push
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
